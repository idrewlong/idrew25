{"version":3,"file":"index-QwongsaB.js","sources":["../../../../components/TechIcons.vue","../../../../node_modules/nuxt/dist/app/components/server-placeholder.js","../../../../node_modules/nuxt/dist/app/components/client-only.js","../../../../components/Hero.vue","../../../../components/About.vue","../../../../components/Skills.vue","../../../../components/Education.vue","../../../../components/Resume.vue","../../../../components/Experience.vue","../../../../components/Projects.vue","../../../../components/Articles.vue","../../../../components/Cta.vue","../../../../pages/index.vue"],"sourcesContent":["# components/TechIcons.vue\n<template>\n\t<div class=\"absolute inset-0\">\n\t\t<Icon\n\t\t\tv-for=\"(icon, index) in techIcons\"\n\t\t\t:key=\"index\"\n\t\t\t:name=\"icon.name\"\n\t\t\tclass=\"absolute w-20 h-20 translate-x-[-50%] translate-y-[-50%] text-background opacity-30\"\n\t\t\t:style=\"getIconStyle(index)\"\n\t\t/>\n\t</div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\n\nconst props = defineProps({\n\tscroll: {\n\t\ttype: Number,\n\t\tdefault: 0,\n\t},\n});\n\n// Adjusted base coordinates and radius for larger orbit\nconst baseX = 355.0341389255983;\nconst baseY = 298.6701355135605;\nconst radius = 280; // Increased radius for larger orbit\nconst baseAngle = 4.15;\nconst rotationFactor = 0.75;\n\nconst techIcons = [\n\t{ name: 'logos:html-5', angle: 4.15 },\n\t{ name: 'logos:javascript', angle: 3.78125 },\n\t{ name: 'logos:nodejs-icon', angle: 3.4125 },\n\t{ name: 'logos:tailwindcss-icon', angle: 3.04375 },\n\t{ name: 'logos:react', angle: 2.675 },\n\t{ name: 'logos:vue', angle: 2.30625 },\n\t{ name: 'logos:nuxt-icon', angle: 1.9375 },\n\t{ name: 'logos:laravel', angle: 1.56875 },\n\t{ name: 'logos:typescript-icon', angle: 1.2 },\n\t{ name: 'logos:css-3', angle: 0.83125 },\n\t{ name: 'logos:python', angle: 0.4625 },\n];\n\nconst getIconStyle = (index) => {\n\tconst angle = techIcons[index].angle - props.scroll * rotationFactor;\n\treturn {\n\t\tleft: `calc(${baseX}px + ${radius}px * cos(${angle}rad))`,\n\t\ttop: `calc(${baseY}px - ${radius}px * sin(${angle}rad))`,\n\t\twidth: '40px', // Explicit width\n\t\theight: '40px', // Explicit height\n\t};\n};\n</script>\n","import { createElementBlock, defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"ServerPlaceholder\",\n  render() {\n    return createElementBlock(\"div\");\n  }\n});\n","import { cloneVNode, createElementBlock, createStaticVNode, defineComponent, getCurrentInstance, h, onMounted, provide, ref } from \"vue\";\nimport { isPromise } from \"@vue/shared\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { getFragmentHTML } from \"./utils.js\";\nimport ServerPlaceholder from \"./server-placeholder.js\";\nexport const clientOnlySymbol = Symbol.for(\"nuxt:client-only\");\nexport default defineComponent({\n  name: \"ClientOnly\",\n  inheritAttrs: false,\n  props: [\"fallback\", \"placeholder\", \"placeholderTag\", \"fallbackTag\"],\n  setup(_, { slots, attrs }) {\n    const mounted = ref(false);\n    onMounted(() => {\n      mounted.value = true;\n    });\n    if (import.meta.dev) {\n      const nuxtApp = useNuxtApp();\n      nuxtApp._isNuxtPageUsed = true;\n      nuxtApp._isNuxtLayoutUsed = true;\n    }\n    provide(clientOnlySymbol, true);\n    return (props) => {\n      if (mounted.value) {\n        return slots.default?.();\n      }\n      const slot = slots.fallback || slots.placeholder;\n      if (slot) {\n        return slot();\n      }\n      const fallbackStr = props.fallback || props.placeholder || \"\";\n      const fallbackTag = props.fallbackTag || props.placeholderTag || \"span\";\n      return createElementBlock(fallbackTag, attrs, fallbackStr);\n    };\n  }\n});\nconst cache = /* @__PURE__ */ new WeakMap();\n// @__NO_SIDE_EFFECTS__\nexport function createClientOnly(component) {\n  if (import.meta.server) {\n    return ServerPlaceholder;\n  }\n  if (cache.has(component)) {\n    return cache.get(component);\n  }\n  const clone = { ...component };\n  if (clone.render) {\n    clone.render = (ctx, cache2, $props, $setup, $data, $options) => {\n      if ($setup.mounted$ ?? ctx.mounted$) {\n        const res = component.render?.bind(ctx)(ctx, cache2, $props, $setup, $data, $options);\n        return res.children === null || typeof res.children === \"string\" ? cloneVNode(res) : h(res);\n      } else {\n        const fragment = getFragmentHTML(ctx._.vnode.el ?? null) ?? [\"<div></div>\"];\n        return createStaticVNode(fragment.join(\"\"), fragment.length);\n      }\n    };\n  } else if (clone.template) {\n    clone.template = `\n      <template v-if=\"mounted$\">${component.template}</template>\n      <template v-else><div></div></template>\n    `;\n  }\n  clone.setup = (props, ctx) => {\n    const nuxtApp = useNuxtApp();\n    const mounted$ = ref(nuxtApp.isHydrating === false);\n    const instance = getCurrentInstance();\n    if (nuxtApp.isHydrating) {\n      const attrs = { ...instance.attrs };\n      const directives = extractDirectives(instance);\n      for (const key in attrs) {\n        delete instance.attrs[key];\n      }\n      onMounted(() => {\n        Object.assign(instance.attrs, attrs);\n        instance.vnode.dirs = directives;\n      });\n    }\n    onMounted(() => {\n      mounted$.value = true;\n    });\n    const setupState = component.setup?.(props, ctx) || {};\n    if (isPromise(setupState)) {\n      return Promise.resolve(setupState).then((setupState2) => {\n        if (typeof setupState2 !== \"function\") {\n          setupState2 = setupState2 || {};\n          setupState2.mounted$ = mounted$;\n          return setupState2;\n        }\n        return (...args) => {\n          if (mounted$.value || !nuxtApp.isHydrating) {\n            const res = setupState2(...args);\n            return res.children === null || typeof res.children === \"string\" ? cloneVNode(res) : h(res);\n          } else {\n            const fragment = getFragmentHTML(instance?.vnode.el ?? null) ?? [\"<div></div>\"];\n            return createStaticVNode(fragment.join(\"\"), fragment.length);\n          }\n        };\n      });\n    } else {\n      if (typeof setupState === \"function\") {\n        return (...args) => {\n          if (mounted$.value) {\n            return h(setupState(...args), ctx.attrs);\n          }\n          const fragment = getFragmentHTML(instance?.vnode.el ?? null) ?? [\"<div></div>\"];\n          return createStaticVNode(fragment.join(\"\"), fragment.length);\n        };\n      }\n      return Object.assign(setupState, { mounted$ });\n    }\n  };\n  cache.set(component, clone);\n  return clone;\n}\nfunction extractDirectives(instance) {\n  if (!instance || !instance.vnode.dirs) {\n    return null;\n  }\n  const directives = instance.vnode.dirs;\n  instance.vnode.dirs = null;\n  return directives;\n}\n","<template>\n  <div\n    class=\"container mx-auto px-4 md:px-8 pt-8 mb-16 sm:pt-24 sm:mb-24 max-w-7xl\"\n  >\n    <section\n      ref=\"heroSection\"\n      class=\"relative bg-gradient-to-br from-orange-400 via-orange-500 to-orange-400 rounded-2xl overflow-hidden flex flex-col sm:flex-row justify-center items-center w-full shadow-2xl\"\n    >\n      <!-- Background decorative elements -->\n      <div class=\"absolute inset-0 overflow-hidden\">\n        <div\n          class=\"absolute inset-0 bg-[radial-gradient(circle_at_50%_50%,rgba(255,255,255,0.1)_0%,transparent_50%)]\"\n        ></div>\n        <div\n          class=\"absolute inset-0 bg-[linear-gradient(45deg,transparent_0%,rgba(255,255,255,0.05)_50%,transparent_100%)]\"\n        ></div>\n      </div>\n\n      <!-- Content -->\n      <div\n        class=\"relative p-8 sm:p-12 flex flex-1 flex-col gap-y-6 sm:gap-y-8 self-start sm:self-end max-w-2xl\"\n      >\n        <div class=\"flex flex-col gap-y-1 sm:gap-y-2\">\n          <div\n            ref=\"greeting\"\n            class=\"text-lg sm:text-xl font-medium text-gray-100 tracking-wide\"\n          >\n            Hi, I'm Andrew\n          </div>\n          <h1\n            ref=\"title\"\n            class=\"text-4xl sm:text-5xl md:text-6xl font-bold text-white leading-tight\"\n          >\n            I like to build\n            <span class=\"whitespace-nowrap\">\n              <span\n                class=\"text-transparent bg-clip-text bg-gradient-to-r from-orange-200 to-white\"\n                >amazing</span\n              >\n              <span\n                class=\"typewriter text-transparent bg-clip-text bg-gradient-to-r from-orange-200 to-white\"\n                >{{ currentWord }}</span\n              >\n            </span>\n          </h1>\n        </div>\n        <p\n          ref=\"description\"\n          class=\"text-base sm:text-lg text-gray-100 leading-relaxed max-w-xl\"\n        >\n          TypeScript connoisseur. AI nerd. Animation aficionado. Fullstack web,\n          mostly React, Svelte, Next or Nuxt. Backend with Lavarel, Node.js, and\n          PHP. Have written a Python bot or two.\n        </p>\n        <div ref=\"buttons\" class=\"flex flex-col sm:flex-row gap-3 sm:gap-4\">\n          <NuxtLink\n            to=\"/contact\"\n            class=\"inline-flex items-center justify-center px-5 sm:px-6 py-2.5 sm:py-3 rounded-lg bg-white text-orange-600 font-medium hover:bg-gray-100 transition-colors duration-300 text-sm sm:text-base\"\n          >\n            Let's work\n            <Icon\n              name=\"heroicons:arrow-right\"\n              class=\"w-4 h-4 sm:w-5 sm:h-5 ml-2\"\n              aria-hidden=\"true\"\n            />\n          </NuxtLink>\n          <NuxtLink\n            to=\"#projects\"\n            @click.prevent=\"scrollToProjects\"\n            class=\"inline-flex items-center justify-center px-5 sm:px-6 py-2.5 sm:py-3 rounded-lg border border-white/20 text-white font-medium hover:bg-white/10 transition-colors duration-300 text-sm sm:text-base\"\n          >\n            View Projects\n          </NuxtLink>\n        </div>\n      </div>\n\n      <!-- Tech Icons and Image -->\n      <div ref=\"imageContainer\" class=\"relative flex-shrink-0 mt-8 sm:mt-0\">\n        <div\n          class=\"relative flex justify-end items-end\"\n          style=\"width: 450px; height: 450px\"\n        >\n          <TechIcons :scroll=\"scrollPosition\" />\n          <div\n            class=\"relative mt-12 transform hover:scale-105 transition-transform duration-500\"\n            style=\"height: 475px; width: 335px\"\n          >\n            <img\n              v-if=\"!isClient\"\n              :src=\"images[0]\"\n              alt=\"Andrew's photo\"\n              class=\"relative z-10 w-full h-full\"\n              loading=\"lazy\"\n            />\n            <ClientOnly>\n              <img\n                v-for=\"(image, index) in images\"\n                :key=\"index\"\n                :src=\"image\"\n                alt=\"Andrew's photo\"\n                :class=\"[\n                  'absolute top-0 left-0 w-full h-full z-10 smooth-image',\n                  { 'opacity-0': image !== currentImage },\n                ]\"\n                style=\"height: 475px; width: 335px; top: 64px\"\n                loading=\"lazy\"\n              />\n            </ClientOnly>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted, nextTick } from 'vue';\n\nconst { $gsap } = useNuxtApp();\n\nconst scrollPosition = ref(0);\nconst isClient = ref(false);\nconst currentImage = ref('');\nconst currentWord = ref('');\nconst words = ['sites', 'apps', 'bots'];\nconst images = ['/images/me_1.png', '/images/me_3.png'];\nlet imageTransitioning = false;\nlet imageInterval;\nlet typewriterTimeout;\n\n// Template refs\nconst heroSection = ref(null);\nconst greeting = ref(null);\nconst title = ref(null);\nconst description = ref(null);\nconst buttons = ref(null);\nconst imageContainer = ref(null);\n\n// Typewriter state\nlet wordIndex = 0;\nlet letterIndex = 0;\nlet isDeleting = false;\n\nconst typewriterEffect = () => {\n  const currentTargetWord = words[wordIndex];\n  let newWord = '';\n  let delay = 100;\n\n  if (isDeleting) {\n    newWord = currentTargetWord.substring(0, letterIndex - 1);\n    letterIndex--;\n    delay = 100; // Slower deletion\n  } else {\n    newWord = currentTargetWord.substring(0, letterIndex + 1);\n    letterIndex++;\n    delay = 75; // Typing speed\n  }\n\n  currentWord.value = newWord;\n\n  if (!isDeleting && newWord === currentTargetWord) {\n    // Word typed, pause, then start deleting\n    isDeleting = true;\n    delay = 2500;\n  } else if (isDeleting && newWord === '') {\n    // Word deleted, pause, then start next word\n    isDeleting = false;\n    wordIndex = (wordIndex + 1) % words.length;\n    letterIndex = 0;\n    delay = 500;\n  }\n\n  typewriterTimeout = setTimeout(typewriterEffect, delay);\n};\n\nconst scrollToProjects = () => {\n  const projectsSection = document.getElementById('projects');\n  if (projectsSection) {\n    projectsSection.scrollIntoView({ behavior: 'smooth' });\n  }\n};\n\nconst updateScroll = () => {\n  requestAnimationFrame(() => {\n    scrollPosition.value = window.scrollY / 1000;\n  });\n};\n\nconst changeImage = () => {\n  if (imageTransitioning) return;\n  imageTransitioning = true;\n  currentImage.value = currentImage.value === images[0] ? images[1] : images[0];\n  setTimeout(() => {\n    imageTransitioning = false;\n  }, 2000); // Aligned with CSS transition for a smoother effect\n};\n\nconst initAnimations = () => {\n  // Set initial states\n  $gsap.set([greeting.value, title.value, description.value, buttons.value], {\n    opacity: 0,\n    y: 30,\n  });\n\n  $gsap.set(imageContainer.value, {\n    opacity: 0,\n    scale: 0.9,\n  });\n\n  // Create timeline for entrance animations\n  const tl = $gsap.timeline();\n\n  tl.to(greeting.value, {\n    opacity: 1,\n    y: 0,\n    duration: 0.8,\n    ease: 'power2.out',\n  })\n    .to(\n      title.value,\n      {\n        opacity: 1,\n        y: 0,\n        duration: 0.8,\n        ease: 'power2.out',\n      },\n      '-=0.6'\n    )\n    .to(\n      description.value,\n      {\n        opacity: 1,\n        y: 0,\n        duration: 0.8,\n        ease: 'power2.out',\n      },\n      '-=0.6'\n    )\n    .to(\n      buttons.value,\n      {\n        opacity: 1,\n        y: 0,\n        duration: 0.8,\n        ease: 'power2.out',\n      },\n      '-=0.6'\n    )\n    .to(\n      imageContainer.value,\n      {\n        opacity: 1,\n        scale: 1,\n        duration: 1,\n        ease: 'power2.out',\n      },\n      '-=0.8'\n    );\n};\n\nonMounted(() => {\n  // Set up scroll listener with throttling\n  window.addEventListener('scroll', updateScroll, { passive: true });\n\n  // Preload images\n  images.forEach((src) => {\n    const img = new Image();\n    img.src = src;\n    img.decode().catch(() => {});\n  });\n\n  // Initialize current image and word\n  isClient.value = true;\n  currentImage.value = images[0];\n  typewriterEffect(); // Start typewriter\n\n  // Set up image rotation only\n  imageInterval = setInterval(changeImage, 4000);\n\n  // Initialize GSAP animations\n  nextTick(() => {\n    initAnimations();\n  });\n});\n\nonUnmounted(() => {\n  window.removeEventListener('scroll', updateScroll);\n  if (imageInterval) clearInterval(imageInterval);\n  if (typewriterTimeout) clearTimeout(typewriterTimeout);\n});\n</script>\n\n<style scoped>\n.smooth-image {\n  transform: translate(0, 0);\n  transform: translateZ(0);\n  -webkit-transform: translate3d(0, 0, 0);\n  transition: opacity 2s cubic-bezier(0.4, 0, 0.2, 1);\n  backface-visibility: hidden;\n  will-change: opacity;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  image-rendering: -webkit-optimize-contrast;\n}\n\n.word-transition {\n  display: inline-block;\n  transition: all 0.5s ease;\n  opacity: 1;\n  transform: translateY(0);\n  position: relative;\n  min-width: 60px; /* Ensure space for the words */\n}\n\n.word-transition.changing {\n  opacity: 0;\n  transform: translateY(20px);\n}\n\n/* Prevent flickering in Webkit browsers */\n@media not all and (min-resolution: 0.001dpcm) {\n  @supports (-webkit-appearance: none) {\n    .smooth-image {\n      -webkit-transform: translate3d(0, 0, 0);\n    }\n  }\n}\n\n/* Improve performance in Firefox */\n@-moz-document url-prefix() {\n  .smooth-image {\n    transform: translate(0, 0);\n    transform: translate3d(0, 0, 0);\n  }\n}\n\n.typewriter {\n  display: inline-block;\n  min-width: 80px;\n  border-right: 2px solid white;\n  padding-right: 4px;\n  animation: blink 0.75s step-end infinite;\n  -webkit-text-fill-color: transparent; /* Ensure gradient text renders on iOS Safari */\n}\n\n@keyframes blink {\n  from,\n  to {\n    border-color: transparent;\n  }\n  50% {\n    border-color: white;\n  }\n}\n</style>\n","<template>\n  <p ref=\"aboutText\" class=\"text-sm leading-relaxed text-gray-600\">\n    I've always been drawn to solving problems and building things that\n    (sometimes) work. After high school, I attended Mississippi Delta Community\n    College and then to Ole Miss for broadcast journalism, I found my groove\n    shooting music videos for artists across Atlanta, Memphis, Nashville, and\n    New Orleans. Turns out, pointing cameras at rappers was great training for\n    my career.\n    <br /><br />In 2022, a friend introduced me to programming, and I was\n    hooked. No more \"we'll fix it in post\" – just clean code that either works\n    or doesn't. I launched Finder's Guide to help businesses build websites and\n    marketing funnels that don't suck, then landed at Mad Genius where I juggle\n    everything from SEO to full stack development. I love building sites,\n    full-stack applications, internal automations that save people's sanity, and\n    SEO strategies that actually move the needle. My skill set covers a variety\n    of areas, but I get particularly fired up about creating solutions that\n    solve real business problems...not just pretty interfaces that look good in\n    screenshots. <br /><br />Currently living in Long Beach, MS with my wife and\n    our dog Bo, who's honestly the best coworker I've ever had. When I'm not\n    coding, you'll find me shooting my Mamiya 645, getting lost in nature, or\n    diving deep into family history because apparently I'm 30 going on 70. I'm\n    an old soul.\n  </p>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\n\nconst { $gsap, $ScrollTrigger } = useNuxtApp();\n\nconst aboutText = ref(null);\n\nonMounted(() => {\n  nextTick(() => {\n    $gsap.fromTo(\n      aboutText.value,\n      {\n        opacity: 0,\n        y: 30,\n      },\n      {\n        opacity: 1,\n        y: 0,\n        duration: 0.8,\n        ease: 'power2.out',\n        scrollTrigger: {\n          trigger: aboutText.value,\n          start: 'top 80%',\n          toggleActions: 'play none none none',\n        },\n      }\n    );\n  });\n});\n</script>\n","<template>\n  <div\n    ref=\"skillsContainer\"\n    class=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-5 gap-8\"\n  >\n    <div\n      v-for=\"(category, index) in skillCategories\"\n      :key=\"category.title\"\n      :ref=\"(el) => (skillCategories[index] = el)\"\n      class=\"skill-category\"\n    >\n      <h3\n        class=\"text-lg md:text-xl font-bold mb-2 pb-2 border-b-2 border-orange-400 inline-block\"\n      >\n        {{ category.title }}\n      </h3>\n      <ul class=\"mt-4 space-y-2 text-sm md:text-base\">\n        <li v-for=\"skill in category.skills\" :key=\"skill\" class=\"text-gray-600\">\n          {{ skill }}\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\n\nconst { $gsap, $ScrollTrigger } = useNuxtApp();\n\nconst skillsContainer = ref(null);\nconst skillCategoryRefs = ref([]);\n\nconst skillCategories = [\n  {\n    title: 'Frontend',\n    skills: [\n      'React/Next.js',\n      'Vue/Nuxt.js',\n      'Svelte/SvelteKit',\n      'Tailwind',\n      'GSAP',\n      'WordPress',\n      'Headless WordPress',\n    ],\n  },\n  {\n    title: 'Backend',\n    skills: ['PHP', 'Laravel', 'Node.js', 'GraphQL', 'Golang', 'WP REST API'],\n  },\n  {\n    title: 'Dev-Ops',\n    skills: ['Docker', 'CI/CD', 'Git', 'Digital Ocean', 'Vercel'],\n  },\n  {\n    title: 'Data',\n    skills: ['Python', 'Pandas', 'NumPy', 'MySQL', 'PostgreSQL'],\n  },\n  {\n    title: 'Software',\n    skills: [\n      'Figma',\n      'Adobe Suite',\n      'Screaming Frog SEO Spider',\n      'SEM Rush',\n      'Google Analytics',\n      'Google Search Console',\n      'Google Tag Manager',\n    ],\n  },\n];\n\nonMounted(() => {\n  nextTick(() => {\n    const skillElements =\n      skillsContainer.value.querySelectorAll('.skill-category');\n\n    $gsap.fromTo(\n      skillElements,\n      {\n        opacity: 0,\n        y: 40,\n      },\n      {\n        opacity: 1,\n        y: 0,\n        duration: 0.6,\n        ease: 'power2.out',\n        stagger: 0.1,\n        scrollTrigger: {\n          trigger: skillsContainer.value,\n          start: 'top 80%',\n          toggleActions: 'play none none none',\n        },\n      }\n    );\n  });\n});\n</script>\n","<template>\n  <div ref=\"educationContainer\" class=\"grid md:grid-cols-2 gap-12\">\n    <div\n      v-for=\"education in educationList\"\n      :key=\"education.year\"\n      class=\"education-item relative min-h-[200px] w-full md:p-6 rounded-lg\"\n    >\n      <!-- Top Section -->\n      <div class=\"pr-16\">\n        <!-- Add padding for logo -->\n        <h2 class=\"flex items-baseline gap-2 mb-4\">\n          <span class=\"md:text-2xl font-semibold\">{{ education.degree }}</span>\n          <span class=\"md:text-2xl text-orange-400\">\n            - {{ education.major }}\n          </span>\n        </h2>\n\n        <ul class=\"text-sm text-gray-600 flex flex-col gap-y-2\">\n          <li\n            v-for=\"(achievement, index) in education.achievements\"\n            :key=\"index\"\n            class=\"flex gap-x-2 items-start\"\n          >\n            <Icon name=\"ci:dot-03-m\" class=\"w-4 h-4\" />\n            <span>{{ achievement }}</span>\n          </li>\n        </ul>\n      </div>\n\n      <!-- School Info Section -->\n      <div class=\"mt-6\">\n        <div class=\"grid grid-cols-[1fr_80px] items-center\">\n          <h3 class=\"md:text-lg text-gray-600\">{{ education.school }}</h3>\n          <span class=\"text-gray-600 text-right\">{{ education.year }}</span>\n        </div>\n      </div>\n\n      <!-- Logo -->\n      <img\n        v-if=\"education.logo\"\n        :src=\"education.logo\"\n        :alt=\"`${education.school} logo`\"\n        class=\"absolute right-6 top-6 w-12 h-12 object-contain\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, nextTick } from 'vue';\nimport { Icon } from '@iconify/vue';\n\nconst { $gsap, $ScrollTrigger } = useNuxtApp();\n\nconst educationContainer = ref(null);\n\nconst educationList = [\n  {\n    degree: 'B.A',\n    major: 'University Studies',\n    achievements: [\n      'Lyceum Scholar',\n      'Lens Colletive Program',\n      \"Chancellor's Leadership Class\",\n    ],\n    school: 'University of Mississippi',\n    year: '2022',\n    logo: '/images/olemiss.png',\n  },\n  {\n    degree: 'A.A',\n    major: 'Pre-Engineering',\n    achievements: ['Phi Theta Kappa President', 'Hall of Fame', 'NASA Scholar'],\n    school: 'Mississippi Delta Community College',\n    year: '2016',\n    logo: '/images/mdcc.webp',\n  },\n];\n\nonMounted(() => {\n  nextTick(() => {\n    if (!educationContainer.value) return;\n    const educationItems =\n      educationContainer.value.querySelectorAll('.education-item');\n\n    if (!educationItems.length) return;\n\n    $gsap.set(educationItems, { opacity: 0, y: 50 });\n\n    const tl = $gsap.timeline({\n      scrollTrigger: {\n        trigger: educationContainer.value,\n        start: 'top 85%',\n        toggleActions: 'play none none none',\n      },\n    });\n\n    tl.to(educationItems, {\n      opacity: 1,\n      y: 0,\n      duration: 0.8,\n      ease: 'expo.out',\n      stagger: 0.2,\n      clearProps: 'all',\n    });\n  });\n});\n</script>\n","<template>\n  <div ref=\"resumeContainer\" class=\"container max-w-6xl mx-auto p-8\">\n    <div ref=\"headerSection\" class=\"flex items-center mb-8\">\n      <h1 class=\"text-3xl font-bold\">More About Me</h1>\n      <div class=\"h-1 hidden md:block bg-orange-400 w-32 ml-4\"></div>\n    </div>\n    <div ref=\"tabsSection\" class=\"mb-8 border-b border-gray-300\">\n      <nav class=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n        <button\n          @click=\"activeTab = 'about'\"\n          :class=\"[\n            'whitespace-nowrap py-4 px-1 border-b-2 ',\n            activeTab === 'about'\n              ? 'border-orange-400 text-black'\n              : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300',\n          ]\"\n        >\n          About\n        </button>\n        <button\n          @click=\"activeTab = 'skills'\"\n          :class=\"[\n            'whitespace-nowrap py-4 px-1 border-b-2 ',\n            activeTab === 'skills'\n              ? 'border-orange-400 text-black'\n              : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300',\n          ]\"\n        >\n          Skills\n        </button>\n        <button\n          @click=\"activeTab = 'education'\"\n          :class=\"[\n            'whitespace-nowrap py-4 px-1 border-b-2 ',\n            activeTab === 'education'\n              ? 'border-orange-400 text-black'\n              : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300',\n          ]\"\n        >\n          Education\n        </button>\n      </nav>\n    </div>\n    <div ref=\"contentSection\">\n      <div v-if=\"activeTab === 'about'\">\n        <About />\n      </div>\n      <div v-if=\"activeTab === 'skills'\">\n        <Skills />\n      </div>\n      <div v-if=\"activeTab === 'education'\">\n        <Education />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch, nextTick } from 'vue';\nimport About from './About.vue';\nimport Skills from './Skills.vue';\nimport Education from './Education.vue';\n\nconst { $gsap, $ScrollTrigger } = useNuxtApp();\n\nconst activeTab = ref('about');\n\nconst resumeContainer = ref(null);\nconst headerSection = ref(null);\nconst tabsSection = ref(null);\nconst contentSection = ref(null);\n\nconst initScrollAnimations = () => {\n  if (\n    !resumeContainer.value ||\n    !headerSection.value ||\n    !tabsSection.value ||\n    !contentSection.value\n  )\n    return;\n\n  $gsap.set(headerSection.value, { opacity: 0, y: 30 });\n  $gsap.set(tabsSection.value, { opacity: 0, y: 20 });\n  $gsap.set(contentSection.value, { opacity: 0, y: 20 });\n\n  const tl = $gsap.timeline({\n    scrollTrigger: {\n      trigger: resumeContainer.value,\n      start: 'top 80%',\n      toggleActions: 'play none none none',\n    },\n  });\n\n  tl.to(headerSection.value, {\n    opacity: 1,\n    y: 0,\n    duration: 0.8,\n    ease: 'power2.out',\n  })\n    .to(\n      tabsSection.value,\n      {\n        opacity: 1,\n        y: 0,\n        duration: 0.6,\n        ease: 'power2.out',\n      },\n      '-=0.6'\n    )\n    .to(\n      contentSection.value,\n      {\n        opacity: 1,\n        y: 0,\n        duration: 0.6,\n        ease: 'power2.out',\n      },\n      '-=0.4'\n    );\n};\n\n// Animate content when tab changes\nwatch(activeTab, () => {\n  if (contentSection.value) {\n    $gsap.fromTo(\n      contentSection.value,\n      {\n        opacity: 0,\n        y: 10,\n      },\n      {\n        opacity: 1,\n        y: 0,\n        duration: 0.4,\n        ease: 'power2.out',\n      }\n    );\n  }\n});\n\nonMounted(() => {\n  nextTick(initScrollAnimations);\n});\n</script>\n","<template>\n  <section ref=\"experienceSection\" class=\"max-w-6xl mx-auto p-6\">\n    <h1 ref=\"title\" class=\"text-3xl font-bold mb-2\">Experience & Projects</h1>\n    <p ref=\"subtitle\" class=\"text-gray-600 mb-8\">\n      My work history. From creating marketing strategies to slinging code.\n    </p>\n\n    <div class=\"flex flex-col md:flex-row gap-y-8 md:gap-x-12\">\n      <!-- Left sticky navigation -->\n      <div ref=\"navigation\" class=\"w-full md:w-1/4 md:sticky top-20 h-full\">\n        <ul\n          class=\"flex flex-row flex-wrap items-center gap-x-4 gap-y-1 md:flex-col md:items-stretch md:gap-0 md:space-y-4\"\n        >\n          <li\n            v-for=\"(experience, index) in experiences\"\n            :key=\"index\"\n            :class=\"[\n              'border-b-4 md:border-l-4 md:border-b-0 transition-colors duration-200 whitespace-nowrap',\n              selectedIndex === index\n                ? 'border-orange-400'\n                : 'border-transparent',\n            ]\"\n          >\n            <button\n              @click=\"selectExperience(index)\"\n              :class=\"[\n                'w-full text-left py-2 px-2 md:px-4',\n                selectedIndex === index\n                  ? 'text-black'\n                  : 'text-gray-500 hover:text-black',\n              ]\"\n            >\n              {{ experience.company }}\n            </button>\n          </li>\n        </ul>\n      </div>\n\n      <!-- Right content -->\n      <div class=\"w-full md:w-3/4\" ref=\"contentContainer\">\n        <div\n          v-if=\"selectedExperience\"\n          class=\"flex flex-col-reverse md:flex-row gap-8 items-start\"\n        >\n          <div class=\"flex-grow space-y-4\">\n            <div>\n              <div class=\"text-xs text-black-light font-medium\">\n                {{ selectedExperience.period }}\n              </div>\n              <div class=\"text-lg font-bold\">\n                {{ selectedExperience.title }} @\n                <span class=\"text-orange-400\">{{\n                  selectedExperience.company\n                }}</span>\n              </div>\n            </div>\n            <div class=\"text-sm text-gray-600\">\n              {{ selectedExperience.description }}\n            </div>\n            <ul class=\"text-sm text-gray-600 flex flex-col gap-y-1.5\">\n              <li\n                v-for=\"(achievement, index) in selectedExperience.achievements\"\n                :key=\"index\"\n                class=\"flex gap-x-2 items-start\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 448 512\"\n                  fill=\"currentColor\"\n                  class=\"w-3.5 h-3.5 pt-1.5 shrink-0\"\n                >\n                  <path\n                    d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"\n                  />\n                </svg>\n                <span>{{ achievement }}</span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"hidden md:block flex-shrink-0 self-center md:self-auto\">\n            <img\n              v-if=\"selectedExperience.logo\"\n              :src=\"selectedExperience.logo\"\n              :alt=\"`${selectedExperience.company} logo`\"\n              :class=\"[\n                'w-24 h-24 object-contain',\n                selectedExperience.company === 'Finders Guide'\n                  ? 'scale-75'\n                  : '',\n              ]\"\n              width=\"96\"\n              height=\"96\"\n              loading=\"lazy\"\n              decoding=\"async\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup>\nimport { ref, watch, computed, onMounted, nextTick } from 'vue';\n\nconst { $gsap, $ScrollTrigger } = useNuxtApp();\n\nconst experiences = [\n  {\n    period: 'June 2024 – Present',\n    title: 'SEO Developer',\n    company: 'Mad Genius',\n    description:\n      'Full-stack web development using Nuxt, React, React Native, Laravel, WordPress, and more. Leading SEO initiatives and comprehensive digital marketing strategies for enterprise clients including Yates Construction, Regional Homes, and the Mississippi State Department of Health.',\n    achievements: [\n      'Develop and execute SEO and digital marketing strategies with in-depth audits covering web presence, AI integration, and social media optimization including YouTube SEO.',\n      'Build and maintain WordPress sites, headless WordPress implementations with Nuxt, React Native mobile applications, and full-stack Laravel web applications.',\n      'Work fluently between multiple teams to properly implement development standards and SEO content across all client projects.',\n      'Design and build various internal tools including web crawlers and automation scripts to streamline SEO analysis and reporting processes.',\n    ],\n    logo: '/images/madg.png',\n  },\n  {\n    period: 'December 2023 – June 2024',\n    title: 'Marketing Project Manager',\n    company: 'Thompson Machinery',\n    description:\n      'Led comprehensive marketing and data initiatives across multiple divisions while managing a small team and developing technical solutions.',\n    achievements: [\n      'Spearheaded multi-channel advertising campaigns including email, PPC, and social media while building custom landing pages using Next.js, TailwindCSS, and WordPress.',\n      'Developed internal tools and automation using Microsoft Power Apps, .NET/C#, and Microsoft Dynamics to streamline workflows and customer journeys.',\n      'Created data visualization solutions with Power BI and MySQL databases to track sales metrics and market share, while implementing SEO strategies using Google Analytics and Semrush.',\n    ],\n    logo: '/images/thompson.png',\n  },\n  {\n    period: 'September 2022 – December 2023',\n    title: 'Marketing Project Manager',\n    company: 'Finders Guide',\n    description:\n      'Led web development and digital marketing initiatives for multiple clients while managing remote teams and implementing comprehensive branding strategies.',\n    achievements: [\n      'Developed modern web solutions using React, Next.js, and Svelte.js while creating high-converting landing pages and implementing SEO strategies to expand client market reach.',\n      'Established complete branding strategies for diverse clients including construction, VFX, and manufacturing companies while optimizing their business processes and data utilization.',\n    ],\n    logo: '/images/g2.png',\n  },\n  {\n    period: 'March 2022 – January 2023',\n    title: 'Customer Support Specialist',\n    company: 'Core Logic',\n    description:\n      'Provided expert software support and customer service while collaborating with development teams to enhance product features and user experience.',\n    achievements: [\n      'Maintained an exceptional 95% customer satisfaction score while providing specialized support for industry-specific software including DASH, Pro-Assist, and Xactimate',\n      'Facilitated effective communication between customers and development teams using Jira and Salesforce while working in an agile SCRUM environment',\n    ],\n    logo: '/images/corelogic.webp',\n  },\n  {\n    period: 'January 2018 – December 2020',\n    title: 'Media Coordinator',\n    company: 'LMC',\n    description:\n      'Managed end-to-end video production projects while coordinating content strategy and advertising campaigns for diverse clients including artists and businesses.',\n    achievements: [\n      'Produced and edited over 100 media projects including music videos and commercials while ensuring consistent quality and client satisfaction throughout the creative process',\n      'Orchestrated social media content management using Hootsuite to enhance consumer engagement while maintaining strict project schedules and deadlines',\n    ],\n    logo: '/images/IDLOGO.png',\n  },\n];\n\nconst selectedIndex = ref(0);\nconst contentContainer = ref(null);\nconst experienceSection = ref(null);\nconst title = ref(null);\nconst subtitle = ref(null);\nconst navigation = ref(null);\n\nconst selectedExperience = computed(() => experiences[selectedIndex.value]);\n\nconst selectExperience = (index) => {\n  selectedIndex.value = index;\n};\n\nconst initScrollAnimations = () => {\n  if (\n    !experienceSection.value ||\n    !title.value ||\n    !subtitle.value ||\n    !navigation.value ||\n    !contentContainer.value\n  )\n    return;\n\n  $gsap.set([title.value, subtitle.value], { opacity: 0, y: 30 });\n  $gsap.set(navigation.value, { opacity: 0, x: -30 });\n  $gsap.set(contentContainer.value, { opacity: 0, x: 30 });\n\n  const tl = $gsap.timeline({\n    scrollTrigger: {\n      trigger: experienceSection.value,\n      start: 'top 80%',\n      toggleActions: 'play none none none',\n    },\n  });\n\n  tl.to([title.value, subtitle.value], {\n    opacity: 1,\n    y: 0,\n    duration: 0.8,\n    ease: 'power2.out',\n    stagger: 0.2,\n  })\n    .to(\n      navigation.value,\n      {\n        opacity: 1,\n        x: 0,\n        duration: 0.8,\n        ease: 'power2.out',\n      },\n      '-=0.6'\n    )\n    .to(\n      contentContainer.value,\n      {\n        opacity: 1,\n        x: 0,\n        duration: 0.8,\n        ease: 'power2.out',\n      },\n      '<'\n    );\n};\n\nwatch(selectedExperience, () => {\n  if (contentContainer.value) {\n    $gsap.fromTo(\n      contentContainer.value,\n      { opacity: 0, y: 20 },\n      { opacity: 1, y: 0, duration: 0.5, ease: 'power3.out' }\n    );\n  }\n});\n\nonMounted(() => {\n  nextTick(initScrollAnimations);\n});\n</script>\n","<template>\n  <section\n    ref=\"projectsSection\"\n    class=\"bg-gradient-to-br from-orange-400 via-orange-500 to-orange-400 py-12\"\n    id=\"projects\"\n  >\n    <div class=\"max-w-6xl mx-auto p-6 relative\">\n      <!-- Main Slider Content -->\n      <!-- <h2 class=\"text-3xl font-bold text-white mb-2\">Projects</h2>\n      <p class=\"text-white mb-8\">\n        Here are some of the projects I've worked on.\n      </p> -->\n      <div class=\"grid md:grid-cols-5 gap-8 items-center\">\n        <!-- Left Column: Text, Counter, Thumbnails -->\n        <div ref=\"leftColumn\" class=\"md:col-span-2\">\n          <div class=\"flex items-center gap-4 mb-4 text-sm text-white\">\n            <div class=\"w-8 h-px bg-white\"></div>\n            <span\n              >{{ String(activeIndex + 1).padStart(2, '0') }} /\n              {{ String(projects.length).padStart(2, '0') }}</span\n            >\n          </div>\n\n          <a :href=\"activeProject.link\" target=\"_blank\" class=\"block mb-4\">\n            <h2\n              ref=\"titleEl\"\n              class=\"text-3xl font-bold text-white hover:text-orange-100 transition-colors duration-300 inline-flex items-center gap-2\"\n            >\n              {{ activeProject.title }}\n              <Icon icon=\"heroicons:arrow-right-20-solid\" class=\"w-5 h-5\" />\n            </h2>\n          </a>\n          <p class=\"text-white mb-8\" ref=\"descriptionEl\">\n            {{ activeProject.description }}\n          </p>\n\n          <div\n            ref=\"techIconsEl\"\n            v-if=\"activeProject.technologies\"\n            class=\"flex flex-wrap gap-3 mb-8\"\n          >\n            <Icon\n              v-for=\"tech in activeProject.technologies\"\n              :key=\"tech\"\n              :icon=\"tech\"\n              class=\"w-8 h-8 text-white\"\n            />\n          </div>\n\n          <div ref=\"buttonsEl\" class=\"flex gap-2\">\n            <button\n              @click=\"prevSlide\"\n              class=\"bg-gray-100 hover:bg-gray-200 text-gray-600 rounded-full p-2 transition\"\n            >\n              <Icon icon=\"heroicons:arrow-left-20-solid\" class=\"w-5 h-5\" />\n            </button>\n            <button\n              @click=\"nextSlide\"\n              class=\"bg-gray-100 hover:bg-gray-200 text-gray-600 rounded-full p-2 transition\"\n            >\n              <Icon icon=\"heroicons:arrow-right-20-solid\" class=\"w-5 h-5\" />\n            </button>\n          </div>\n        </div>\n\n        <!-- Right Column: Image -->\n        <div ref=\"rightColumn\" class=\"md:col-span-3\">\n          <div\n            class=\"relative rounded-lg overflow-hidden border border-gray-200 w-full h-0 pb-[56.25%]\"\n          >\n            <img\n              :src=\"activeProject.image\"\n              :alt=\"activeProject.title\"\n              ref=\"imageEl\"\n              class=\"absolute inset-0 w-full h-full object-cover\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, watch } from 'vue';\nimport { Icon } from '@iconify/vue';\n\nconst { $gsap, $ScrollTrigger } = useNuxtApp();\n\nconst projects = [\n  {\n    title: 'Mad Genius - 5.0',\n    description:\n      'High-performance charting library for React Native powered by Reanimated, Skia, Gesture Handler, and D3.',\n    image: '/images/madgcover.png',\n    link: 'https://madg.com/',\n    technologies: [\n      'logos:nuxt-icon',\n      'logos:typescript-icon',\n      'logos:tailwindcss-icon',\n      'logos:wordpress-icon',\n      'logos:graphql',\n      'logos:wpengine',\n    ],\n  },\n  {\n    title: 'Yates Construction',\n    description:\n      'A Raycast extension for running Open Source Intelligence checks on a domain.',\n    image: '/images/Yates.png',\n    link: 'https://wgyates.com/',\n    technologies: [\n      'logos:nuxt-icon',\n      'logos:tailwindcss-icon',\n      'logos:wordpress-icon',\n      'logos:graphql',\n      'logos:wpengine',\n    ],\n  },\n  {\n    title: 'Regional Homes',\n    description:\n      'A type and runtime safe query builder for the GROQ query language.',\n    image: '/images/Regional.png',\n    link: 'https://regionalhomes.net/',\n    technologies: [\n      'logos:nuxt-icon',\n      'logos:tailwindcss-icon',\n      'logos:wordpress-icon',\n      'logos:graphql',\n      'logos:wpengine',\n    ],\n  },\n  {\n    title: 'Eley Guild Hardy',\n    description: 'A screen recording app built with web technologies.',\n    image: '/images/EGH.png',\n    link: 'https://eleyguildhardy.com/',\n    technologies: [\n      'logos:wordpress-icon',\n      'logos:tailwindcss-icon',\n      'logos:wpengine',\n    ],\n  },\n  {\n    title: \"Lusco's Restaurant\",\n    description: 'An interactive Mandelbrot set explorer built with WebGL.',\n    image: '/images/luscos.png',\n    link: 'https://luscos.restaurant/',\n    technologies: [\n      'logos:nuxt-icon',\n      'logos:tailwindcss-icon',\n      'logos:wordpress-icon',\n      'logos:graphql',\n      'logos:wpengine',\n    ],\n  },\n  {\n    title: 'React Native Zephyr',\n    description: 'A design system and component library for React Native.',\n    image: '/images/fat8.jpg',\n    link: '#',\n    technologies: ['logos:react', 'logos:typescript-icon'],\n  },\n];\n\nconst activeIndex = ref(0);\nconst activeProject = computed(() => projects[activeIndex.value]);\n\nconst projectsSection = ref(null);\nconst leftColumn = ref(null);\nconst rightColumn = ref(null);\nconst titleEl = ref(null);\nconst descriptionEl = ref(null);\nconst imageEl = ref(null);\nconst techIconsEl = ref(null);\nconst buttonsEl = ref(null);\n\nconst nextSlide = () => {\n  goToSlide((activeIndex.value + 1) % projects.length);\n};\n\nconst prevSlide = () => {\n  goToSlide((activeIndex.value - 1 + projects.length) % projects.length);\n};\n\nconst goToSlide = (index) => {\n  if (index === activeIndex.value) return;\n  activeIndex.value = index;\n};\n\nconst initScrollAnimations = () => {\n  if (!projectsSection.value || !leftColumn.value || !rightColumn.value) return;\n\n  $gsap.set(leftColumn.value, { opacity: 0, x: -50 });\n  $gsap.set(rightColumn.value, { opacity: 0, x: 50 });\n\n  const tl = $gsap.timeline({\n    scrollTrigger: {\n      trigger: projectsSection.value,\n      start: 'top 80%',\n      toggleActions: 'play none none none',\n    },\n  });\n\n  tl.to(leftColumn.value, {\n    opacity: 1,\n    x: 0,\n    duration: 0.8,\n    ease: 'power2.out',\n  }).to(\n    rightColumn.value,\n    {\n      opacity: 1,\n      x: 0,\n      duration: 0.8,\n      ease: 'power2.out',\n    },\n    '-=0.6'\n  );\n};\n\nwatch(activeIndex, () => {\n  const textElements = [\n    titleEl.value,\n    descriptionEl.value,\n    techIconsEl.value,\n  ].filter(Boolean);\n\n  $gsap.fromTo(\n    textElements,\n    { opacity: 0, y: 10 },\n    {\n      opacity: 1,\n      y: 0,\n      duration: 0.5,\n      ease: 'power3.out',\n      stagger: 0.1,\n    }\n  );\n\n  $gsap.fromTo(\n    imageEl.value,\n    {\n      opacity: 0,\n      scale: 1.05,\n    },\n    {\n      opacity: 1,\n      scale: 1,\n      duration: 0.7,\n      ease: 'power3.out',\n    }\n  );\n});\n\nonMounted(() => {\n  nextTick(() => {\n    initScrollAnimations();\n  });\n});\n</script>\n\n<style scoped>\n/* Scoped styles can be added here if needed */\n</style>\n","<template>\n  <section ref=\"articlesSection\" class=\"max-w-6xl mx-auto p-6\" id=\"articles\">\n    <h1 ref=\"title\" class=\"text-3xl font-bold mb-2 font-mono\">Articles</h1>\n    <p ref=\"subtitle\" class=\"text-gray-600 mb-8\">\n      Thoughts and insights on marketing, AI, and web development.\n    </p>\n\n    <div ref=\"articlesGrid\" class=\"grid md:grid-cols-2 gap-6\">\n      <article\n        v-for=\"article in articles\"\n        :key=\"article.url\"\n        class=\"article-card group bg-white rounded-2xl overflow-hidden shadow-lg hover:shadow-xl\"\n      >\n        <a\n          :href=\"article.url\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          class=\"flex flex-col h-full\"\n        >\n          <!-- Image Container with Fixed Height -->\n          <div\n            class=\"relative h-[240px] overflow-hidden bg-gradient-to-b\"\n            :class=\"article.bgColor\"\n          >\n            <img\n              :src=\"article.image\"\n              :alt=\"article.title\"\n              class=\"absolute inset-0 w-full h-full object-contain p-8 transition-transform duration-300 group-hover:scale-105\"\n            />\n          </div>\n\n          <!-- Content Container with Fixed Height -->\n          <div class=\"p-6 flex flex-col flex-grow bg-white\">\n            <div class=\"flex items-start justify-between gap-4 mb-3\">\n              <h2\n                class=\"text-xl font-mono font-bold group-hover:text-orange-500 transition-colors line-clamp-2\"\n              >\n                {{ article.title }}\n              </h2>\n              <time\n                :datetime=\"article.date\"\n                class=\"text-sm text-gray-500 whitespace-nowrap font-mono\"\n              >\n                {{ formatDate(article.date) }}\n              </time>\n            </div>\n            <p class=\"text-gray-600 text-sm mb-4 line-clamp-2 flex-grow\">\n              {{ article.description }}\n            </p>\n            <div\n              class=\"flex items-center text-orange-500 group-hover:text-orange-600 transition-colors font-mono\"\n            >\n              Read article\n              <Icon\n                icon=\"material-symbols:arrow-circle-right-outline\"\n                class=\"w-4 h-4 ml-1\"\n              />\n            </div>\n          </div>\n        </a>\n      </article>\n    </div>\n  </section>\n</template>\n\n<script setup>\nimport { ref, onMounted, nextTick } from 'vue';\nimport { Icon } from '@iconify/vue';\n\nconst { $gsap, $ScrollTrigger } = useNuxtApp();\n\nconst articlesSection = ref(null);\nconst title = ref(null);\nconst subtitle = ref(null);\nconst articlesGrid = ref(null);\n\nconst articles = [\n  {\n    title: \"The Modern Marketer's Guide To AI Implementation\",\n    date: '2025-03-19',\n    url: 'https://madg.com/2025/03/19/the-modern-marketers-guide-to-ai-implementation/',\n    description:\n      'A comprehensive guide on integrating AI tools and strategies into modern marketing workflows, focusing on practical applications and real-world examples.',\n    image: '/images/tools.png',\n    bgColor: 'from-yellow-400 to-yellow-500',\n  },\n  {\n    title: 'SEO in the Age of AI Search Engines',\n    date: '2025-01-07',\n    url: 'https://madg.com/2025/01/07/seo-in-the-age-of-ai-search-engines/',\n    description:\n      'Exploring how AI-powered search engines are changing SEO practices and what marketers need to know to stay ahead of the curve.',\n    image: '/images/computer.png',\n    bgColor: 'from-purple-400 to-purple-500',\n  },\n];\n\nconst formatDate = (dateString) => {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  });\n};\n\nconst initScrollAnimations = () => {\n  if (\n    !articlesSection.value ||\n    !title.value ||\n    !subtitle.value ||\n    !articlesGrid.value\n  ) {\n    return;\n  }\n  // Set initial states with slide positions\n  $gsap.set(title.value, {\n    opacity: 0,\n    x: -50,\n  });\n\n  $gsap.set(subtitle.value, {\n    opacity: 0,\n    x: 50,\n  });\n\n  const articleCards = articlesGrid.value.querySelectorAll('.article-card');\n  articleCards.forEach((card, index) => {\n    $gsap.set(card, {\n      opacity: 0,\n      x: index % 2 === 0 ? -60 : 60, // Alternate left/right\n    });\n  });\n\n  // Create timeline for all animations\n  const tl = $gsap.timeline({\n    scrollTrigger: {\n      trigger: articlesSection.value,\n      start: 'top 90%', // Start animation when 90% of the element is in view\n      toggleActions: 'play none none none',\n    },\n  });\n\n  // Animate title, subtitle, and cards\n  tl.to(title.value, {\n    opacity: 1,\n    x: 0,\n    duration: 0.7,\n    ease: 'expo.out',\n    clearProps: 'all',\n  })\n    .to(\n      subtitle.value,\n      {\n        opacity: 1,\n        x: 0,\n        duration: 0.7,\n        ease: 'expo.out',\n        clearProps: 'all',\n      },\n      '-=0.5'\n    ) // Overlap with title animation\n    .to(\n      articleCards,\n      {\n        opacity: 1,\n        x: 0,\n        duration: 0.7,\n        ease: 'expo.out',\n        stagger: 0.15,\n        clearProps: 'all',\n      },\n      '-=0.5'\n    ); // Overlap with subtitle animation\n};\n\nonMounted(() => {\n  nextTick(initScrollAnimations);\n});\n</script>\n","<template>\n  <div ref=\"ctaSection\" class=\"\">\n    <div\n      class=\"container max-w-6xl mx-auto px-4 md:px-8 py-16 sm:py-24 text-center md:text-left\"\n    >\n      <div\n        ref=\"header\"\n        class=\"flex items-center justify-center md:justify-start mb-4\"\n      >\n        <h2 class=\"text-3xl font-bold text-black\">Let's Work Together</h2>\n        <div class=\"h-1 hidden md:block bg-orange-400 w-32 ml-4\"></div>\n      </div>\n      <p\n        ref=\"description\"\n        class=\"text-lg text-gray-600 mb-8 max-w-3xl mx-auto md:mx-0\"\n      >\n        I'm always looking for new projects and opportunities. If you have a\n        project in mind or just want to say hello, feel free to reach out. Let's\n        create something amazing together!\n      </p>\n      <div ref=\"button\">\n        <NuxtLink\n          to=\"/contact\"\n          class=\"inline-block bg-orange-500 text-white font-bold py-4 px-8 rounded-lg hover:bg-orange-600 transition-colors text-lg\"\n        >\n          Get in Touch\n        </NuxtLink>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, nextTick } from 'vue';\n\nconst { $gsap, $ScrollTrigger } = useNuxtApp();\n\nconst ctaSection = ref(null);\nconst header = ref(null);\nconst description = ref(null);\nconst button = ref(null);\n\nconst initScrollAnimations = () => {\n  if (\n    !ctaSection.value ||\n    !header.value ||\n    !description.value ||\n    !button.value\n  ) {\n    return;\n  }\n\n  const elements = [header.value, description.value, button.value];\n\n  // Set initial states\n  $gsap.set(elements, {\n    opacity: 0,\n    y: 30,\n  });\n\n  // Create a timeline for the animation\n  const tl = $gsap.timeline({\n    scrollTrigger: {\n      trigger: ctaSection.value,\n      start: 'top 60%',\n      toggleActions: 'play none none none',\n    },\n  });\n\n  tl.to(elements, {\n    opacity: 1,\n    y: 0,\n    duration: 0.8,\n    ease: 'expo.out',\n    stagger: 0.2,\n    clearProps: 'all',\n  });\n};\n\nonMounted(() => {\n  nextTick(initScrollAnimations);\n});\n</script>\n","<template>\n  <div class=\"min-h-screen flex flex-col w-full\">\n    <Hero />\n    <main class=\"w-full py-12 flex flex-col justify-center gap-y-16\">\n      <Resume />\n      <Experience />\n      <div class=\"w-full\">\n        <Projects />\n      </div>\n      <Articles />\n      <Cta />\n    </main>\n  </div>\n</template>\n\n<script setup>\nuseSeoMeta({\n  title: 'Full Stack Developer',\n  description:\n    'Andrew Long is a full stack developer with a passion for building web applications and marketing strategies.',\n  ogTitle: 'Full Stack Developer',\n  ogDescription:\n    'Andrew Long is a full stack developer with a passion for building web applications and marketing strategies.',\n});\n</script>\n"],"names":[],"mappings":"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","x_google_ignoreList":[1,2]}